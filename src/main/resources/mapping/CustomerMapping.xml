<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.johnny.store.mapper.CustomerMapper" >
    <resultMap id="BaseResultMapOfCustomer" type="com.johnny.store.entity.CustomerEntity" >
        <id column="CustomerID" property="customerID" jdbcType="INTEGER" />
        <result column="CustomerName" property="customerName" jdbcType="VARCHAR" />
        <result column="Account" property="account" jdbcType="VARCHAR" />
        <result column="Password" property="password" jdbcType="VARCHAR" />
        <result column="CustomerSex" property="customerSex" jdbcType="VARCHAR" />
        <result column="Cellphone" property="cellphone" jdbcType="VARCHAR" />
        <result column="Email" property="email" jdbcType="VARCHAR" />
        <result column="CustomerType" property="customerType" jdbcType="VARCHAR" />
        <result column="CustomerTypeText" property="customerTypeText" jdbcType="VARCHAR" />
        <result column="Status" property="status" jdbcType="VARCHAR" />
        <result column="StatusText" property="statusText" jdbcType="VARCHAR" />
        <result column="InUser" property="inUser" jdbcType="VARCHAR" />
        <result column="InDate" property="inDate" jdbcType="VARCHAR" />
        <result column="LastEditUser" property="lastEditUser" jdbcType="VARCHAR" />
        <result column="LastEditDate" property="lastEditDate" jdbcType="VARCHAR" />
    </resultMap>
    <select id="searchTotalCount" resultType="java.lang.Integer">
        SELECT
            COUNT(1) AS TotalCount
        FROM Customer;
    </select>
    <select id="searchList" resultMap="BaseResultMapOfCustomer">
        SELECT
            CustomerID,
            CustomerName,
            Account,
            Password,
            CustomerSex,
            Cellphone,
            Email,
            CustomerType,
            (CASE CustomerType WHEN 'N' THEN '一般客户'
            WHEN 'W' THEN '批发商'
            END) AS CustomerTypeText,
            Status,
            (CASE Status WHEN 'A' THEN '激活'
                        WHEN 'F' THEN '冻结'
             END) AS StatusText,
            InUser,
            DATE_FORMAT(InDate, '%Y-%m-%d %H:%i:%s') AS InDate,
            LastEditUser,
            DATE_FORMAT(LastEditDate, '%Y-%m-%d %H:%i:%s') AS LastEditDate
        FROM Customer
        WHERE 1 = 1
        <if test="arg2 != null">
            and Cellphone=#{arg2}
        </if>
        <if test="arg3 != null">
            and Status=#{arg3}
        </if>
        ORDER BY InDate DESC
        LIMIT #{arg0,jdbcType=INTEGER}, #{arg1,jdbcType=INTEGER};
    </select>
    <select id="search" resultMap="BaseResultMapOfCustomer">
        SELECT
            CustomerID,
            CustomerName,
            Account,
            Password,
            CustomerSex,
            Cellphone,
            Email,
            CustomerType,
            (CASE CustomerType WHEN 'N' THEN '一般客户'
             WHEN 'W' THEN '批发商'
             END) AS CustomerTypeText,
            Status,
            (CASE Status WHEN 'A' THEN '激活'
             WHEN 'F' THEN '冻结'
             END) AS StatusText,
            InUser,
            InDate,
            LastEditUser,
            LastEditDate
        FROM Customer
        WHERE CustomerID = #{customerID,jdbcType=INTEGER}
    </select>
    <select id="login" resultMap="BaseResultMapOfCustomer">
        SELECT
            CustomerID,
            CustomerName,
            Account,
            Password,
            CustomerSex,
            Cellphone,
            Email,
            CustomerType,
            (CASE CustomerType WHEN 'N' THEN '一般客户'
            WHEN 'W' THEN '批发商'
            END) AS CustomerTypeText,
            Status,
            (CASE Status WHEN 'A' THEN '激活'
            WHEN 'F' THEN '冻结'
            END) AS StatusText,
            InUser,
            InDate,
            LastEditUser,
            LastEditDate
        FROM Customer
        WHERE (Account = #{arg0, jdbcType=VARCHAR}
                OR Cellphone = #{arg0, jdbcType=VARCHAR}
                OR Email = #{arg0, jdbcType=VARCHAR})
          AND Password = #{arg1, jdbcType=VARCHAR}
    </select>
    <insert id="insert" parameterType="com.johnny.store.entity.CustomerEntity" >
        INSERT INTO Customer (
            Cellphone,
            Email,
            Password,
            CustomerType,
            InUser,
            LastEditUser
        )
        VALUES (
            #{cellphone, jdbcType=NVARCHAR},
            #{email, jdbcType=VARCHAR},
            #{password, jdbcType=VARCHAR},
            #{customerType, jdbcType=VARCHAR},
            #{inUser, jdbcType=VARCHAR},
            #{lastEditUser, jdbcType=VARCHAR}
        )
    </insert>
    <update id="update" parameterType="com.johnny.store.entity.CustomerEntity" >
        UPDATE Customer SET
            CustomerName = #{customerName,jdbcType=NVARCHAR},
            Account = #{account,jdbcType=NVARCHAR},
            CustomerSex = #{customerSex,jdbcType=NVARCHAR},
            Cellphone = #{cellphone,jdbcType=NVARCHAR},
            Email = #{email,jdbcType=NVARCHAR},
            LastEditUser = #{lastEditUser,jdbcType=VARCHAR}
        WHERE CustomerID = #{customerID,jdbcType=INTEGER}
    </update>
    <update id="updateStatus" parameterType="com.johnny.store.entity.CustomerEntity" >
        UPDATE Customer SET
            Status = #{status,jdbcType=NVARCHAR},
            LastEditUser = #{lastEditUser,jdbcType=VARCHAR}
        WHERE CustomerID = #{customerID,jdbcType=INTEGER}
    </update>
    <update id="updatePassword" parameterType="com.johnny.store.entity.CustomerEntity" >
        UPDATE Customer SET
            Password = #{password,jdbcType=NVARCHAR},
            LastEditUser = #{lastEditUser,jdbcType=VARCHAR}
        WHERE CustomerID = #{customerID,jdbcType=INTEGER}
    </update>
    <delete id="delete" parameterType="java.lang.Integer" >
        DELETE FROM Customer
        WHERE CustomerID = #{customerID,jdbcType=INTEGER}
    </delete>
</mapper>